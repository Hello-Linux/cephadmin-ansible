# tasks file for cephadm config
---
- name: Init Ceph cluster use bootstrap node
  block:
    - name: Execute cephadm prepare-host command
      command: cephadm prepare-host
      register: cephadm_prepare_result

    - name: Assert that the cepdadm requirements was successful
      assert:
        that:
          - cephadm_prepare_result.rc == 0
        fail_msg: "cephadm is dependent on environment problems!"
        success_msg: "cephadm depends on the passing of the environment test!"

    - name: Bootstrap Ceph cluster with cephadm
      shell: cephadm bootstrap --mon-ip {{ ansible_host }} --allow-fqdn-hostname 2>&1 | tee -a /tmp/ceph_install.log && touch /tmp/success_bootstrap.txt
      args:
        warn: no
        creates: /tmp/success_bootstrap.txt

    - name: generate ssh pubkey
      shell: cephadm shell -- ceph cephadm get-pub-key > ~/ceph.pub

    - name: Copy public key to other nodes
      command: "ssh-copy-id -f -i ~/ceph.pub -o StrictHostKeyChecking=no root@{{ item }}"
      with_items: "{{ groups['ceph_cluster'] }}"
      when:
        - inventory_hostname != item

    - name: Get cephadm SSH config
      shell: cephadm shell -- ceph cephadm get-ssh-config > ssh_config

    - name: config private key
      shell: cephadm shell -- ceph config-key get mgr/cephadm/ssh_identity_key > ~/cephadm_private_key && chmod 0600 ~/cephadm_private_key

    - name: Add hosts to Ceph cluster
      shell: cephadm shell -- ceph orch host add {{ item }} {{ hostvars[item]['ansible_host'] }}
      with_items: "{{ groups['ceph_cluster'] }}"
      when:
        - inventory_hostname != item
  when: deploy_role == 'main'

- name: Add user_defined labels to hosts
  command: cephadm shell -- ceph orch host label add {{ inventory_hostname }} {{ item }}
  loop: "{{ hostvars[inventory_hostname].label | from_yaml }}"
  when: hostvars[inventory_hostname].label is defined
  delegate_to: "{{ groups['ceph_cluster'][0] }}"

- name: Add OSD daemons
  command: cephadm shell -- ceph orch daemon add osd {{ inventory_hostname }}:{{ item }}
  loop: "{{ hostvars[inventory_hostname].osd_devices | from_yaml }}"
  when:
    - hostvars[inventory_hostname].osd_devices is defined
  delegate_to: "{{ groups['ceph_cluster'][0] }}"

- name: Apply RGW service
  command: cephadm shell -- ceph orch apply rgw myhammer '--placement=label:rgw count-per-host:1' --port={{ CEPH_RGW_PORT }}
  delegate_to: "{{ groups['ceph_cluster'][0] }}"
  when:
    - ENABLE_RGW_SERVICE == 'true'

